name: Build APK

on:
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.2'

    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        go version -m $(which gomobile)
        
    - name: Setup Android environment
      uses: android-actions/setup-android@v3

    - name: Install NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r21e
        link-to-sdk: true

    - name: Build dependencies
      run: |
        export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/21.4.7075529
        export PATH=$PATH:$ANDROID_NDK_HOME
        echo $PATH
        mkdir ${{ github.workspace }}/build
        cd ${{ github.workspace }}/build
        git clone --depth=1 -b main https://github.com/hzcsure/AndroidLibXrayLite.git
        cd AndroidLibXrayLite
        go get github.com/xtls/xray-core@${{ github.event.inputs.XRAY_CORE_VERSION }} || true
        gomobile init
        go mod tidy -v
        gomobile bind -v -androidapi 19 -ldflags='-s -w' ./
        cp *.aar ${{ github.workspace }}/V2rayNG/app/libs/

    - name: Build APK
      run: |
        cd ${{ github.workspace }}/V2rayNG
        chmod 755 gradlew
        ./gradlew assembleDebug
        
    - name: List APK files
      run: |
        find ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/ -type f -exec du -h {} \;
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/debug/v2rayNG_1.8.26_arm*.apk
